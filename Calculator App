Project Objectives:

The goal of this project is to develop a basic calculator application using HTML, CSS, and JavaScript. The calculator should allow users to:
- Perform basic arithmetic operations (addition, subtraction, multiplication, division).
- Display user input and calculation results in real-time.
- Provide a clear button to reset the calculator.
- Ensure an intuitive user interface with a responsive design.
- Implement simple error handling for invalid calculations.


Project Requirements:

1. Functional Requirements

The application should include a display screen for input and results.
It should have buttons for:

- Digits (0-9)
- Operators (+, -, , /)
- Decimal point (.)
- Equal sign (=) to compute results
- Clear button (C) to reset input

- Clicking on buttons should update the display dynamically.
- Pressing the equal button should evaluate the expression and show the result.
- The clear button should reset the display.
- Basic input validation should be implemented to prevent incorrect calculations.


2. Technical Requirements

The project should use HTML for structure, CSS for styling, and JavaScript for interactivity.
The user interface should be responsive and visually appealing.
The project should be deployed and accessible via a web browser.

Use Case: Basic Calculator App

Actors:
User (someone who wants to perform arithmetic calculations)

Preconditions:
The user opens the calculator application in a web browser.

Main Flow:
1. The user sees the calculator interface with a display and buttons.
2. The user clicks number buttons to enter digits.
3. The user clicks an operator button (+, -, *, /).
4. The user clicks another number.
5. The user presses the equal button (=) to compute the result.
6. The result is displayed on the screen.


Alternative Flows:
User presses C (clear button) → The display resets.
User enters an invalid expression (e.g., consecutive operators) → Display shows an error message.

Postconditions:
The user successfully performs calculations and gets results.



HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="calculator">
        <input type="text" id="display" disabled>
        <div class="buttons">
            <button onclick="clearDisplay()">C</button>
            <button onclick="appendCharacter('/')">/</button>
            <button onclick="appendCharacter('*')">*</button>
            <button onclick="appendCharacter('-')">-</button>

            <button onclick="appendCharacter('7')">7</button>
            <button onclick="appendCharacter('8')">8</button>
            <button onclick="appendCharacter('9')">9</button>
            <button onclick="appendCharacter('+')">+</button>

            <button onclick="appendCharacter('4')">4</button>
            <button onclick="appendCharacter('5')">5</button>
            <button onclick="appendCharacter('6')">6</button>
            <button onclick="calculateResult()">=</button>

            <button onclick="appendCharacter('1')">1</button>
            <button onclick="appendCharacter('2')">2</button>
            <button onclick="appendCharacter('3')">3</button>

            <button onclick="appendCharacter('0')">0</button>
            <button onclick="appendCharacter('.')">.</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>




CSS

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f5f5f5;
    font-family: Arial, sans-serif;
}

.calculator {
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

#display {
    width: 100%;
    height: 50px;
    font-size: 1.5em;
    text-align: right;
    padding: 10px;
    margin-bottom: 10px;
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

button {
    padding: 15px;
    font-size: 1.2em;
    border: none;
    cursor: pointer;
    background-color: #ddd;
    border-radius: 5px;
}

button:hover {
    background-color: #bbb;
}



JAVASCRIPT

let display = document.getElementById('display');

function appendCharacter(char) {
    display.value += char;
}

function clearDisplay() {
    display.value = '';
}

function calculateResult() {
    try {
        display.value = eval(display.value);
    } catch {
        display.value = 'Error';
    }
}
